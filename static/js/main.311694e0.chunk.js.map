{"version":3,"sources":["Assets/images/logo.svg","Assets/images/feature-icon-01.svg","Assets/images/feature-icon-02.svg","Assets/images/feature-icon-03.svg","Components/HeaderImage/index.js","Components/Title/index.js","Components/Card/index.js","Components/Services/index.js","Components/PricingHeading/index.js","Components/PricingCard/index.js","Components/Pricing/index.js","Components/MainBody/index.js","Components/Footer/index.js","Components/LandingPage/index.js","API/index.js","API/config.js","Redux/Actions/index.js","Components/Profile/index.js","BlockChain/config.js","Components/ViewJobCard/index.js","Components/Loader/index.js","Components/CreateJobCard/index.js","Components/Jobs/index.js","Components/MyJobs/index.js","Components/NotifCard/index.js","Components/Notifications/index.js","Components/Form/index.js","Components/ListElements/index.js","Components/AppbarTop/index.js","Components/Spinner/index.js","Components/HomePage/index.js","Components/NavbarDrawer/index.js","Components/ResponsiveDrawer/index.js","Components/AuthCard/index.js","Components/SigninForm/index.js","Components/Dashboard/index.js","App.js","Redux/Reducers/reducer.js","Redux/Reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","headerImage","props","class","href","src","source","alt","Title","_onButtonClick","console","log","history","push","this","title","description","onClick","buttonText","className","style","marginTop","React","Component","withRouter","Card","image","Services","mappedCard","require","map","value","PricingHeading","PricingCard","sign","money","month","Pricing","MainBody","Footer","ListCard","xml","path","width","height","xmlns","d","fill","alter","copyright","Landingpage","HeaderImage","Logo","Api","data","endPoint","success","error","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","err","Actions","Signup","completed","failed","dispatch","type","content","Login","payload","userdata","Clear","Update_Metamask","accountNo","EditProfile","GetAllJobs","CreateJob","applyJob","GetAppliedJobs","startJob","completeJob","getAllNotifs","declineJob","acceptJob","markCompleteJob","Profile","_onChange","text","field","setState","prevState","userInfo","_toggleEditable","disabled","state","_updateProfile","first_name","last_name","email","username","account_type","Reducer","metamask_acc","status","ToastsStore","message","fluid","lg","sm","md","TextField","id","label","variant","onChange","e","target","Button","color","store","position","ToastsContainerPosition","BOTTOM_CENTER","connect","smart_contract_ABI","ViewJobCard","_enableMetaMask","web3","window","ethereum","alert","Web3","enable","eth","Contract","methods","employer","freelancer","amount","job_id","send","from","once","receipt","_onClickApply","freelancer_email","employer_email","jobDetails","category","toggleLoading","_onClickStart","blockChain_data","budget","_reloadJobs","_onClickComplete","_renderButtonSection","view","Paper","elevation","duration","display","justifyContent","flexDirection","alignItems","marginRight","override","css","Loader","sizeUnit","size","loading","CreateJobCard","jobFields","_handleCreateJob","trim","toggleShow","placeholder","multiline","rowsMax","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","Jobs","_renderAlljobs","allJobs","job","index","_jobDetails","_toggleLoading","_renderCreateJobs","alljobs","show","length","textAlign","NotifCard","_onMarkComplete","_onAccept","notif_id","_onDecline","_renderApprovalBtns","_renderMarkDoneBtn","Notifications","_getNotifs","Form","handleClick","open","handleClose","_renderContent","name","_onToggle","MyJobs","_renderJobButton","marginLeft","paddingTop","fontWeight","ListElements","List","paddingBottom","ListItem","button","ListItemIcon","ListItemText","primary","fontSize","homeOPEN","Collapse","in","timeout","unmountOnExit","component","disablePadding","Divider","key","nested","clickFunction","withStyles","theme","root","background","drawer","breakpoints","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","flexGrow","padding","spacing","unit","paddingLeft","withTheme","classes","AppBar","backgroundColor","Toolbar","IconButton","aria-label","onClickEvent","Typography","noWrap","AwesomeComponent","textDecoration","cursor","_onSignOut","Spinner","Hidden","smUp","implementation","Drawer","container","Container","anchor","direction","openState","onClose","onCloseDrawer","paper","renderDrawer","xsDown","ResponsiveDrawer","mobileOpen","loaded","that","handleDrawerToggle","onButtonClick","_renderDrawerContents","_renderPageContent","inputheight","input","onsignout","CssBaseline","AuthCard","toggle","_setToggle","_handleKeyDown","onLogin","onSignup","_renderSignUp","signup_details","firstName","onChangeSignup","lastName","userName","password","confirmPassword","marginBottom","options","accountlist","accountType","option","_onSelect","_renderSignIn","paddingRight","login_details","onChangeLogin","onKeyDown","SigninForm","event","testEmail","test","loginData","ls","set","setTimeout","signupData","flag","SignIn","buttonsubmit","onEmail","onPassword","children","basename","exact","active","spinner","Dashboard","match","INITIAL_STATE","combineReducers","action","Boolean","location","hostname","persistConfig","storage","persistedReducer","persistReducer","reducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.311694e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f5298670.svg\";","module.exports = __webpack_public_path__ + \"static/media/feature-icon-01.851f0815.svg\";","module.exports = __webpack_public_path__ + \"static/media/feature-icon-02.7e409417.svg\";","module.exports = __webpack_public_path__ + \"static/media/feature-icon-03.6da0ea13.svg\";","import React from 'react';\n\nconst headerImage = (props) => \n{\nreturn(\n    <header class=\"site-header\">\n    <div class=\"container\">\n        <div class=\"site-header-inner\">\n            <div class=\"brand header-brand\">\n                <h1 class=\"m-0\">\n                    <a href=\"#\">\n                        <img class=\"header-logo-image\" src={props.source} alt=\"Logo\"/>\n                    </a>\n                </h1>\n            </div>\n        </div>\n    </div>\n</header>\n\n);\n\n}\n\nexport default headerImage; \n","import React from 'react';\nimport { connect } from 'react-redux';\n// import Actions from '../../Redux/Actions';\n\nimport { withRouter } from \"react-router\";\n\nclass Title extends React.Component\n{\n\tconstructor(props){\n\t\tsuper()\n\t}\n\n\n\t_onButtonClick = () => {\n\t\tconsole.log(this.props);\n\t\t\n\t\tthis.props.history.push('/dwork/signin')\n\t}\n\n\trender(){\n\n\n\t\treturn(\n\n\t\t\t<section class=\"hero\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t<div class=\"hero-inner\">\n\t\t\t\t\t\t\t\t<div class=\"hero-copy\">\n\t\t\t\t\t\t\t<h1 class=\"hero-title mt-0\">{this.props.title}</h1>\n\t\t\t\t\t\t\t<p class=\"hero-paragraph\">{this.props.description}</p>\n\t\t\t\t\t\t\t<div class=\"hero-cta\">\n\t\t\t\t\t\t\t\t<button class=\"button button-primary\" onClick = {this._onButtonClick}>{this.props.buttonText}</button>\n\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class=\"hero-figure anime-element\">\n\t\t\t\t\t\t\t\t\t<svg class=\"placeholder\" width=\"528\" height=\"396\" viewBox=\"0 0 528 396\">\n\t\t\t\t\t\t\t\t\t\t<rect width=\"528\" height=\"396\" style={{fill:\"transparent\"}} />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-01\" data-rotation=\"45deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-02\" data-rotation=\"-45deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-03\" data-rotation=\"0deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-04\" data-rotation=\"-135deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-05\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-06\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-07\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-08\" data-rotation=\"-22deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-09\" data-rotation=\"-52deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-10\" data-rotation=\"-50deg\"></div>\n\t\t\t\t\t\t\t\t</div> */}\n\n<div className=\"pricing-tables-wrap animated rotateIn delay-1s\" >\n                <div className=\"pricing-table\" style={{marginTop:'300px'}} >\n                   \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\n\t\t);\n\t}\n\n}\n\n// const mapStateToProps = ( state ) => {\n// \treturn state;\n// }\n\n// const mapDispatchToProps = ( dispatch ) => {\n// \treturn {\n// \t\t// set_name: ( name ) => Actions.set_name(name)\n// show_dashboard : () => dispatch(Actions.show_dashboard())\n\n// \t}\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(Title);\n\nexport default withRouter(Title)","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div class=\"feature text-center is-revealing\">\n            <div class=\"feature-inner\">\n                <div class=\"feature-icon\">\n                    <img src={props.image} alt=\"Feature 06\" />\n                </div>\n    <h4 class=\"feature-title mt-24\">{props.title}</h4>\n    <p class=\"text-sm mb-0\">{props.description}</p>\n                </div>\n            </div>\n            );\n        }\n        \nexport default Card;","import React from 'react';\nimport Card from '../Card';\n\nconst Services = () => {\n   \nlet array = [{\n    title:'No third party',\ndescription:'Decentralized nature of the technology makes it a system that doesn’t rely on third-party companies; No third-party, no added risk.',\nimage :require(\"../../Assets/images/feature-icon-01.svg\")\n},\n\n\n{\n    title:'Zero Scams',\ndescription:'As the system runs on algorithms, there is no chance for people to scam you out of anything. No can utilize blockchain for their personal gains.' ,\nimage :require(\"../../Assets/images/feature-icon-02.svg\")},\n\n{\n    title:'Authentic Nature',\ndescription:'This nature of the system makes it a unique kind of system for every kind of people. And hackers will have a hard time cracking it.' ,\nimage :require(\"../../Assets/images/feature-icon-03.svg\")},\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.',\n// image :require(\"../../Assets/images/feature-icon-04.svg\")\n// },\n\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.' ,\n// image :require(\"../../Assets/images/feature-icon-05.svg\")},\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.' ,\n// image :require(\"../../Assets/images/feature-icon-06.svg\")},\n\n\n]\n\n\nconst mappedCard = array.map(( value ) => {\n\n    return  <Card title = { value.title }\n    description ={value.description}\n    image = {value.image}/>\n})\n   \n    return (\n        <section class=\"features section\">\n            <div class=\"container\">\n                <div class=\"features-inner section-inner has-bottom-divider\">\n                    <div class=\"features-wrap\">\n                       {mappedCard}\n                    </div>\n                </div>\n            </div>\n        </section>\n\n    );\n}\n\nexport default Services;","import React from 'react';\n\n\nconst PricingHeading = (props) => {\n    return (\n        <div class=\"pricing-header text-center\">\n            <h2 class=\"section-title mt-0\">{props.title}</h2>\n            <p class=\"section-paragraph mb-0\">{props.description}</p>\n        </div>\n    );\n}\n\nexport default PricingHeading;","import React from 'react';\n\nconst PricingCard = (props) => {\n\n\n    let array = ['Become a freelancer or client', 'Post or find jobs',\n        'Create invoices after successful completion of project', 'Send feedback about client or freelancer']\n\n    const mappedCard = array.map((value) => {\n\n        return <li>\n            <span> {value} </span>\n        </li>\n    })\n\n    return (\n        <div class=\"pricing-table-main\">\n            <div class=\"pricing-table-header pb-24\">\n                <div class=\"pricing-table-price\"><span class=\"pricing-table-price-currency h2\">{props.sign}</span><span class=\"pricing-table-price-amount h1\">{props.money}</span><span class=\"text-xs\">{props.month}</span></div>\n            </div>\n            <div class=\"pricing-table-features-title text-xs pt-24 pb-24\">{props.description}</div>\n            <ul class=\"pricing-table-features list-reset text-xs\">\n\n                {mappedCard}\n\n\n            </ul>\n        </div>\n    );\n}\n\nexport default PricingCard;","import React from 'react';\nimport PricingHeading from '../PricingHeading';\nimport PricingButton from '../PricingButton';\nimport PricingCard from '../PricingCard';\n\nconst Pricing = () =>\n{\n\nreturn(\n\n    <section class=\"pricing section\">\n    <div class=\"container-sm\">\n        <div class=\"pricing-inner section-inner\">\n            <PricingHeading title = \"Unlimited for all\"  \n            description = \"Dwork does not take any commision from client or freelancers. Only the amount of gas fee is deducted for the completion of transaction\"/>\n            \n            <div class=\"pricing-tables-wrap\">\n                <div class=\"pricing-table\">\n                    <div class=\"pricing-table-inner is-revealing\">\n                        <PricingCard sign = \"Gwit\" money = \"2\" month = \"/transaction\" description = \"What you will get\" />\n                        {/* <PricingButton title = \"Pre order now\"/> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n);\n\n}\n\nexport default Pricing;","import React from 'react';\nimport Title from '../Title';\nimport Services from '../Services';\nimport Pricing from '../Pricing';\n// import Contact from '../Contact';\n\n\nconst MainBody = () => {\n    return (\n        <main>\n            <Title title=\"Dwork\"\n                description=\"A blockchain based freelancing platform that gives freelancers 100% of what they earn\"\n                buttonText=\"get started\" />\n\n            <Services />\n            <Pricing />\n            {/* <Contact text = \"Still not convinced on buying?\"\n            buttonText = \"Get in touch\"/> */}\n        </main>\n    );\n}\nexport default MainBody;","import React from 'react';\n\nconst Footer = (props) => {\n\n    let array = ['Contact', 'About us']\n\n    const mappedCard = array.map((value) => {\n\n        return <li>\n            <a href=\"#\">{value}</a>\n        </li>\n    })\n\n    let list2 = [{\n        title: 'Facebook',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M6.023 16L6 9H3V6h3V4c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V6H13l-1 3H9.28v7H6.023z'\n    },\n\n    {\n        title: 'Twitter',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M16 3c-.6.3-1.2.4-1.9.5.7-.4 1.2-1 1.4-1.8-.6.4-1.3.6-2.1.8-.6-.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 .3 0 .5.1.7-2.7-.1-5.2-1.4-6.8-3.4-.3.5-.4 1-.4 1.7 0 1.1.6 2.1 1.5 2.7-.5 0-1-.2-1.5-.4C.7 7.7 1.8 9 3.3 9.3c-.3.1-.6.1-.9.1-.2 0-.4 0-.6-.1.4 1.3 1.6 2.3 3.1 2.3-1.1.9-2.5 1.4-4.1 1.4H0c1.5.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3v-.4C15 4.3 15.6 3.7 16 3z'\n    },\n\n    {\n        title: 'Google',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M7.9 7v2.4H12c-.2 1-1.2 3-4 3-2.4 0-4.3-2-4.3-4.4 0-2.4 2-4.4 4.3-4.4 1.4 0 2.3.6 2.8 1.1l1.9-1.8C11.5 1.7 9.9 1 8 1 4.1 1 1 4.1 1 8s3.1 7 7 7c4 0 6.7-2.8 6.7-6.8 0-.5 0-.8-.1-1.2H7.9z'\n    },\n    ]\n\n    const ListCard = list2.map((value) => {\n\n        return <li>\n            <a href=\"#\">\n                <span class=\"screen-reader-text\">{value.title}</span>\n                <svg width=\"16\" height=\"16\" xmlns={value.xml}>\n                    <path d={value.path} fill=\"#0270D7\" />\n                </svg>\n            </a>\n        </li>\n    })\n\n    return (\n\n        <footer class=\"site-footer\">\n            <div class=\"container\">\n                <div class=\"site-footer-inner\">\n                    <div class=\"brand footer-brand\">\n                        <a href=\"#\">\n                            <img class=\"header-logo-image\" src={props.image} alt={props.alter} />\n                        </a>\n                    </div>\n\n                    <ul class=\"footer-links list-reset\">\n                        {mappedCard}\n                    </ul>\n\n                    <ul class=\"footer-social-links list-reset\">\n                       {ListCard}\n                    </ul>\n                    <div class=\"footer-copyright\">&copy; {props.copyright}</div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './style.css';\nimport Logo from '../../Assets/images/logo.svg';\n\nimport HeaderImage from '../HeaderImage';\nimport MainBody from '../MainBody';\nimport Footer from'../Footer';\n\nclass Landingpage extends Component {\n\n\n\n\nrender(props){\n    console.log('checking props ',props)\n\n    return (\n\n        <body class=\"is-boxed has-animations\"  >\n            <div class=\"body-wrap\" >\n                <HeaderImage source = {Logo}/>\n                <MainBody/>\n                <Footer image = {Logo} alter = \"Logo\" copyright = \"2020 Dwork, all rights reserved\"/>\n            </div>\n        </body>\n\n    );\n}\n    \n}\n\nexport default  Landingpage;","import { URL } from \"./config\"\n\n\n\nexport const Api = {\n    post: ( data, endPoint, success, error ) => {\n        fetch(`${URL}${endPoint}`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) \n        })\n        .then( response => response.json())\n        .then( result => { \n            return success( result )\n        })\n        .catch( err => {\n            return error( err ) \n            \n        })\n    },\n\n    get: (  endPoint, success, error ) => {\n        fetch(`${URL}${endPoint}`,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( response => response.json())\n        .then( result => { \n           \n            return success( result )\n        })\n        .catch( err => {\n            \n            \n            return error( err ) \n            \n        })\n    }\n}\n","export const URL = \"https://dwork.herokuapp.com\"","import { Api } from \"../../API\"\n\nconst Actions = {\n\n    Signup: (data, completed, failed) => {\n        // console.log(data)\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n            let userData = {\n                path: 'abc',\n                content: data\n            }\n\n            Api.post(userData, '/signup', success => {\n                dispatch({ type: 'STOP_LOADING' })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n\n    Login: (data, completed, failed) => {\n// console.log(data)\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n\n            Api.post( data, '/signin', success => {\n                dispatch({ type: 'USER_INFO', payload: success.userdata })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n\n    Clear: () => {\n        return dispatch => {\n            dispatch({ type: 'CLEAR' })\n\n\n        }\n    },\n\n    Update_Metamask: ( accountNo ) => {\n        return dispatch => {\n            dispatch({ type: 'UPDATE_META_MASK', payload: accountNo })\n\n\n        }\n    },\n\n    EditProfile: (data, completed, failed) => {\n\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n            let userData = {\n                path: 'abc',\n                content: data\n            }\n\n            Api.post(userData, '/editProfile', success => {\n                dispatch({ type: 'STOP_LOADING' })\n                Api.post(data, '/Profile', success => {\n                    dispatch({ type: 'UPDATE_USER_INFO', payload: success.userdata })\n                    \n                }, error => {\n                    \n                })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n \n    GetAllJobs: ( completed, failed) => {\n\n        return dispatch => { \n            \n            Api.get( '/allJobs', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    CreateJob: (data, completed, failed) => {\n\n        return dispatch => {  \n            Api.post(data, '/createJob', success => { \n                \n                return completed(success)\n            }, error => { \n                return failed(error)\n            })\n        }\n    },\n\n    applyJob: (data, completed, failed) => {\n\n        return dispatch => {  \n            Api.post(data, '/apply', success => { \n                \n                return completed(success)\n            }, error => { \n                return failed(error)\n            })\n        }\n    },\n\n    GetAppliedJobs: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/appliedJobs', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    startJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/startJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    completeJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/completeJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    getAllNotifs: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/notifications', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    declineJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/declineJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    acceptJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/acceptJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    markCompleteJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/markCompleteJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n}\n\nexport default Actions","import React, { Component } from 'react'\nimport './Styles.css'\nimport { TextField, Button } from '@material-ui/core';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n \n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: this.props.Reducer.userInfo,\n            disabled: true\n        }\n    }\n\n   \n\n\n    _onChange = ( text, field ) => {\n        this.setState( prevState => ({\n            ...prevState,\n            userInfo: {\n                ...prevState.userInfo,\n                [field] : text\n            }\n        }))\n    }\n\n    _toggleEditable = () => {\n        this.setState({ disabled: !this.state.disabled })\n    }\n\n    _updateProfile = () => {\n\n        let data = {\n            first_name: this.state.userInfo.first_name,\n            last_name: this.state.userInfo.last_name,\n            email: this.state.userInfo.email,\n            username: this.state.userInfo.username,\n            account_type: this.state.userInfo.account_type,\n            accountNo: this.state.userInfo.accountNo == '' \n            ? this.props.Reducer.metamask_acc != '' ? this.props.Reducer.metamask_acc\n             : this.state.userInfo.accountNo : this.state.userInfo.accountNo \n        }\n\n        this.props.EditProfile( data, success => {\n\n            if (success.status == 'success') {\n                ToastsStore.success(success.message) \n              }\n              else {\n                ToastsStore.error(success.message)\n               \n              }\n        }, error => {\n            ToastsStore.error(error.message)\n        })\n    }\n\n    render() {\n        return (<Container fluid >\n      \n            <Row fluid>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.first_name}\n                        label=\"First Name\" variant=\"outlined\" disabled={this.state.disabled}\n                         onChange={(e)=>this._onChange(e.target.value,'first_name')} />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.last_name}\n                        label=\"Last Name\" variant=\"outlined\" disabled={this.state.disabled}\n                        onChange={(e)=>this._onChange(e.target.value,'last_name')} />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.email}\n                        label=\"Email\" variant=\"outlined\" disabled />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.username}\n                        label=\"UserName\" variant=\"outlined\" disabled={this.state.disabled} \n                        onChange={(e)=>this._onChange(e.target.value,'username')} />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.account_type}\n                        label=\"Account Type\" variant=\"outlined\" disabled />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" \n                    value={this.state.userInfo.accountNo == '' \n                    ? this.props.Reducer.metamask_acc != '' ? this.props.Reducer.metamask_acc\n                     : this.state.userInfo.accountNo : this.state.userInfo.accountNo }\n                        disabled label=\"Meta mask ID\" variant=\"outlined\" />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n\n                <Col lg={5} sm={5} md={5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <Button variant=\"contained\" color=\"primary\" \n                    onClick={ this.state.disabled ? this._toggleEditable : this._updateProfile} >\n                        \n                        {\n                             this.state.disabled ? \"Edit Profile\" : \"Update Profile\"\n                        }\n                    </Button>\n                </Col>\n\n                <Col lg={4} sm={4} md={4}></Col>\n\n\n            </Row>\n\n            {\n                this.state.disabled == false\n                    ? <Row fluid style={{ marginTop: '20px' }}>\n                        <Col lg={5.4} sm={5} md={5}></Col>\n\n                        <Col lg={2} sm={3} md={3}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this._toggleEditable} >\n                                Cancel\n                            </Button>\n                        </Col>\n\n                        <Col lg={4.6} sm={4} md={4}></Col>\n\n\n                    </Row>\n                    : null\n            }\n\n<ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        EditProfile: (data, success, error) => dispatch(Actions.EditProfile(data, success, error)),\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n","export const smart_contract_address = '0x49a84C506e1f222eDcC174D7dBfB146Fe9E80e06'\n\nexport const smart_contract_ABI = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_employer\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_freelancer\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_amount\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_job_id\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_status\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"applyJob\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_job_id\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"completeJob\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_key\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"employer\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"freelancer\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"job_id\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"status\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport Actions from '../../Redux/Actions';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Web3 from 'web3'\nimport { smart_contract_ABI, smart_contract_address } from '../../BlockChain/config'\n\nclass ViewJobCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    _enableMetaMask = (data, success, error) => {\n        let web3;\n        let that = this\n\n        if (window.ethereum) {\n            web3 = new Web3(window.ethereum);\n            try {\n                window.ethereum.enable().then(function (d) {\n                    // User has allowed account access to DApp...\n                    // console.log('meta mask succ ', d[0])\n                    const dwork = new web3.eth.Contract(smart_contract_ABI, smart_contract_address)\n\n                    dwork.methods.applyJob(data.employer, data.freelancer, data.amount, data.job_id, data.status)\n                        .send({ from: d[0] })\n                        .once('receipt', (receipt) => {\n                            console.log(receipt)\n                            return success(true)\n                        })\n\n\n                })\n                    .catch(err => {\n                        console.log('meta mask err 1 ', err)\n                        ToastsStore.error('Meta mask authorization is required !')\n                        return error(false)\n\n                    })\n\n            } catch (e) {\n                // User has denied account access to DApp...\n                console.log('meta mask err ', e)\n                ToastsStore.error('Meta mask authorization is required !')\n                return error(false)\n\n            }\n        }\n        else {\n            alert('You have to install MetaMask !');\n            return error(false)\n        }\n    }\n\n    _onClickApply = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            employer_email: this.props.jobDetails.email,\n            category: this.props.jobDetails.category,\n            job_id: this.props.jobDetails.job_id\n        }\n\n\n        this.props.applyJob(data, success => {\n            if (success.status == 'success') {\n                this.props.toggleLoading()\n                ToastsStore.success(success.message)\n            }\n            else {\n                this.props.toggleLoading()\n                ToastsStore.error(success.message)\n            }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n\n\n    }\n\n\n    _onClickStart = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            email: this.props.jobDetails.email,\n            job_id: this.props.jobDetails.job_id\n        }\n\n        let blockChain_data = {\n            employer: this.props.jobDetails.email,\n            freelancer: this.props.Reducer.userInfo.email,\n            amount: this.props.jobDetails.budget,\n            job_id: this.props.jobDetails.job_id,\n            status: \"started\"\n        }\n\n        this.props.toggleLoading()\n        this._enableMetaMask(blockChain_data, completed => {\n\n            this.props.startJob(data, success => {\n                if (success.status == 'success') {\n                    this.props._reloadJobs()\n                }\n                else {\n                    this.props.toggleLoading()\n                }\n            }, error => {\n                this.props.toggleLoading()\n                ToastsStore.error(error.message)\n            })\n        }, failed => {\n\n        })\n\n    }\n\n    _onClickComplete = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            email: this.props.jobDetails.email,\n            job_id: this.props.jobDetails.job_id\n        }\n\n\n        this.props.toggleLoading()\n        this.props.completeJob(data, success => {\n            if (success.status == 'success') {\n                this.props._reloadJobs()\n            }\n            else {\n                this.props.toggleLoading()\n            }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _renderButtonSection = () => {\n        if (this.props.view == 'MyJobs')\n            return <div className=\"BtnContainer\" >\n                <p ><h6 className=\"textStyle\">Posted by: </h6>{this.props.jobDetails.email}</p>\n                {\n                    this.props.jobDetails.status == 'declined' || this.props.jobDetails.status == 'pending' || this.props.jobDetails.status == 'done'\n                        ? null\n                        : <Button variant=\"contained\" color=\"primary\"\n                            onClick={this.props.jobDetails.status == 'accepted'\n                                ? this._onClickStart : this.props.jobDetails.status == 'started' ? this._onClickComplete\n                                    : null\n                            }\n                        >\n\n                            {this.props.jobDetails.status == 'accepted' ? 'Start'\n                                : this.props.jobDetails.status == 'started' ? 'Complete' : null}\n                        </Button>\n                }\n\n            </div>\n        else\n            return <div className=\"BtnContainer\" >\n                <p ><h6 className=\"textStyle\">Posted by: </h6>{this.props.jobDetails.email}</p>\n                <Button variant=\"contained\" color=\"primary\"\n                    onClick={this._onClickApply} >\n                    Apply\n            </Button>\n            </div>\n    }\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\" >\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Category: </h6>{this.props.jobDetails.category}</p>\n                <p><h6 className=\"textStyle\">Budget: </h6>{this.props.jobDetails.budget}</p>\n            </div>\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Duration: </h6>{this.props.jobDetails.duration}</p>\n                <p><h6 className=\"textStyle\">{this.props.view == 'MyJobs' ? 'Request status: ' : 'Status: '}</h6>{this.props.jobDetails.status}</p>\n            </div>\n\n            <div className=\"descriptionContainer\" >\n                <h6 className=\"textStyle\">Description: </h6>\n                <p className=\"description\">{this.props.jobDetails.description}</p>\n            </div>\n\n            {\n\n\n                this.props.Reducer.userInfo.account_type == 'Freelancer'\n                    ? this._renderButtonSection()\n                    : <div className=\"RowContainer\" >\n                        <div style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            flexDirection: 'row',\n                            alignItems: 'center'\n                        }}>\n                            <h6 className=\"textStyle\" style={{marginRight: '4px'}} >Posted by: </h6> {this.props.jobDetails.email}</div>\n                    </div>\n            }\n\n\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        applyJob: (data, success, error) => dispatch(Actions.applyJob(data, success, error)),\n        startJob: (data, success, error) => dispatch(Actions.startJob(data, success, error)),\n        completeJob: (data, success, error) => dispatch(Actions.completeJob(data, success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewJobCard)\n","import React from 'react';\nimport { css } from '@emotion/core';\n// First way to import\nimport { GridLoader } from 'react-spinners';\n\n \nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nconst Loader = ( props ) => {\n\n    return (\n      <div className='sweet-loading'>\n        <GridLoader\n          css={override}\n          sizeUnit={\"px\"}\n          size={10}\n          color={'#54abe5'}\n          loading={props.loading}\n        />\n      </div> \n    )\n  }\n  export default Loader","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button, InputLabel } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Actions from '../../Redux/Actions';\n\nclass CreateJobCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            jobFields: {\n                category: '',\n                budget: '',\n                duration: '',\n                description: '',\n                email: this.props.Reducer.userInfo.email,\n                account_type: this.props.Reducer.userInfo.account_type,\n                status: 'newly arrived'\n            }\n        }\n    }\n\n    _onChange = (text, field) => {\n        this.setState(prevState => ({\n            ...prevState,\n            jobFields: {\n                ...prevState.jobFields,\n                [field]: text\n            }\n        }))\n    }\n\n    _handleCreateJob = () => {\n\n        let jobFields = this.state.jobFields\n\n        if (jobFields.description.trim() == '')\n            return ToastsStore.error('Please provide job description')\n\n        if (jobFields.duration.trim() == '')\n            return ToastsStore.error('Please provide job duration')\n\n        if (jobFields.budget.trim() == '')\n            return ToastsStore.error('Please provide job budget')\n\n        if (jobFields.category.trim() == '')\n            return ToastsStore.error('Please provide job category')\n\n\n        \n            this.props.toggleLoading()\n        this.props.CreateJob(this.state.jobFields, success => {\n            if (success.status == 'success') {\n                this.props.toggleLoading()\n                this.props.toggleShow()\n                ToastsStore.success(success.message) \n              }\n              else {\n                this.props.toggleLoading()\n                ToastsStore.error(success.message)\n               \n              }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n\n    }\n\n\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\"   >\n\n            <div className=\"descContainer\" >\n                <h6 className=\"textStyle\">Create Dwork Job</h6>\n            </div>\n\n\n            <div className=\"RowContainer\">\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.description}\n                    label=\"Description\" variant=\"outlined\" placeholder=\"Job description\" multiline={true} rowsMax={5}\n                    onChange={(e) => this._onChange(e.target.value, 'description')} fullWidth />\n\n            </div>\n\n            <div className=\"RowContainer\">\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.duration}\n                    label=\"Duration\" variant=\"outlined\" placeholder=\"2 months\"\n                    onChange={(e) => this._onChange(e.target.value, 'duration')}\n                    style={{ marginRight: '15px', marginTop: '20px' }}\n                />\n\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.budget}\n                    label=\"Budget\" variant=\"outlined\" disabled={this.state.disabled} placeholder=\"50$\"\n                    onChange={(e) => this._onChange(e.target.value, 'budget')}\n                    style={{ marginTop: '20px' }}\n                    />\n            </div>\n\n\n            <div className=\"RowContainer\" style={{marginTop: '5px'}}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Select a category</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.jobFields.category}\n                        onChange={(e) => this._onChange(e.target.value, 'category')}\n                    >\n                        <MenuItem value={'mobile_app'}>Mobile App</MenuItem>\n                        <MenuItem value={'web_app'}>Web App</MenuItem>\n                    </Select>\n                </FormControl>\n\n            </div>\n\n            <div className=\"BtnContainer\" style={{\n                marginTop: '10px'\n            }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this._handleCreateJob} >Create Job</Button>\n            </div>\n\n            <div className=\"BtnContainer\" >\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n            </div>\n           \n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        CreateJob: ( data,success, error) => dispatch(Actions.CreateJob(data,success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobCard)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { TextField, Button } from '@material-ui/core';\nimport CreateJobCard from '../CreateJobCard';\n\nclass Jobs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        this.props.GetAllJobs(success => {\n            this.setState({ loading: false, allJobs: success.alljobs })\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category, \n                status: job.status,\n                job_id: job.job_id,\n                email: job.email\n            }\n\n            return <ViewJobCard jobDetails={_jobDetails}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n\n    _renderCreateJobs = () => {\n        return <Row >\n            <Col lg={3} sm={3} md={3}></Col>\n\n            <Col lg={6} sm={6} md={6} >\n                <CreateJobCard toggleLoading={this._toggleLoading} toggleShow={this.props.toggleShow} />\n            </Col>\n\n            <Col lg={3} sm={3} md={3}></Col>\n        </Row>\n\n    }\n\n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n\n                this.props.show\n                    ? this._renderCreateJobs()\n                    : <Row >\n                        <Col lg={3} sm={3} md={3}></Col>\n\n                        <Col lg={6} sm={6} md={6}>\n                            {\n                                this.state.allJobs.length > 0\n                                    ? this._renderAlljobs()\n                                    : <p style={{ textAlign: 'center' }}>No new jobs</p>\n                            }\n                        </Col>\n\n                        <Col lg={3} sm={3} md={3}></Col>\n                    </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        GetAllJobs: (success, error) => dispatch(Actions.GetAllJobs(success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jobs)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux' \n\nclass Jobs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n      \n       this._reloadJobs()\n    }\n\n    _reloadJobs = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email\n        }\n        this.setState({ loading: true })\n        this.props.GetAppliedJobs( data, success => {\n            if(success.status == 'success')\n            this.setState({ loading: false, allJobs: success.message })\n            else\n            this.setState({loading: false})\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n\n        // console.log('jobsss ',this.state.allJobs)\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category, \n                status: job.status,\n                job_id: job.job_id,\n                email: job.email\n            }\n\n            return <ViewJobCard jobDetails={_jobDetails} view='MyJobs' _reloadJobs={this._reloadJobs}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n \n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n                <Row >\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        {\n                            this.state.allJobs.length > 0\n                                ? this._renderAlljobs()\n                                : <p style={{ textAlign: 'center' }}>Apply some jobs to see your jobs here</p>\n                        }\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        GetAppliedJobs: (data,success, error) => dispatch(Actions.GetAppliedJobs(data,success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jobs)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport Actions from '../../Redux/Actions';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Web3 from 'web3'\nimport { smart_contract_ABI, smart_contract_address } from '../../BlockChain/config'\n\nclass NotifCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    _enableMetaMask = (data, success, error) => {\n        let web3;\n        let that = this\n\n        if (window.ethereum) {\n            web3 = new Web3(window.ethereum);\n            try {\n                window.ethereum.enable().then(function (d) {\n                    // User has allowed account access to DApp...\n                    // console.log('meta mask succ ', d[0])\n                    const dwork = new web3.eth.Contract(smart_contract_ABI, smart_contract_address)\n\n                    dwork.methods.completeJob(data)\n                    .send({ from: d[0] })\n                    .once('receipt', (receipt) => {\n                        console.log(receipt)\n                        return success(true)\n                })\n\n                  \n                })\n                    .catch(err => { \n                         console.log('meta mask err 1 ', err)\n                        ToastsStore.error('Meta mask authorization is required !')\n                        return error(false)\n                        \n                    })\n\n            } catch (e) {\n                // User has denied account access to DApp...\n                console.log('meta mask err ', e) \n                ToastsStore.error('Meta mask authorization is required !')\n                return error(false)\n                \n            }\n        }\n        else {\n            alert('You have to install MetaMask !');\n            return error(false)\n        }\n    }\n\n    _onMarkComplete = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id, \n        }\n\n        this.props.toggleLoading()\n        this._enableMetaMask(data.job_id,completed => {\n           \n            this.props.markCompleteJob(data, success => {\n                this.props._reloadJobs()\n            }, error => {\n                this.props.toggleLoading()\n                ToastsStore.error(error.message)\n            })\n        }, failed => {\n\n        })\n\n      \n    }\n\n\n    _onAccept = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            employer_email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id,\n            notif_id: this.props.jobDetails.notif_id\n        }\n \n        this.props.toggleLoading()\n        this.props.acceptJob(data, success => {\n            this.props._reloadJobs()\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _onDecline = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            employer_email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id,\n            notif_id: this.props.jobDetails.notif_id\n        }\n \n        this.props.toggleLoading()\n        this.props.declineJob(data, success => {\n            this.props._reloadJobs()\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _renderButtonSection = () => {\n        return <div className=\"BtnContainer\" >\n            <p ><h6 className=\"textStyle\" >Posted by: </h6>{this.props.jobDetails.email}</p>\n            {\n                this.props.jobDetails.status == 'pending'\n                    ? this._renderApprovalBtns()\n                    : this.props.jobDetails.status == 'completed'\n                        ? this._renderMarkDoneBtn()\n                        : null\n            }\n\n        </div>\n\n    }\n\n    _renderApprovalBtns = () => {\n        return <div><Button variant=\"contained\" color=\"primary\"\n            onClick={this._onDecline} style={{marginRight: '7px'}} >\n            Decline\n                        </Button>\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={this._onAccept}  >\n                Accept\n                    </Button>\n        </div>\n    }\n\n    _renderMarkDoneBtn = () => {\n        return <Button variant=\"contained\" color=\"primary\"\n            onClick={this._onMarkComplete}  >\n            Done\n        </Button>\n\n    }\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\" >\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Job Request by: </h6>{this.props.jobDetails.freelancer_email}</p>\n\n            </div>\n            <div className=\"RowContainer\">\n                <p>{this.props.jobDetails.message}</p>\n            </div>\n\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Category: </h6>{this.props.jobDetails.category}</p>\n                <p><h6 className=\"textStyle\">Budget: </h6>{this.props.jobDetails.budget}</p>\n            </div>\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Duration: </h6>{this.props.jobDetails.duration}</p>\n                <p><h6 className=\"textStyle\">{'Status: '}</h6>{this.props.jobDetails.status}</p>\n            </div>\n\n            <div className=\"descriptionContainer\" >\n                <h6 className=\"textStyle\">Description: </h6>\n                <p className=\"description\">{this.props.jobDetails.description}</p>\n            </div>\n\n            {\n                this._renderButtonSection()\n\n            }\n\n\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        declineJob: (data, success, error) => dispatch(Actions.declineJob(data, success, error)),\n        acceptJob: (data, success, error) => dispatch(Actions.acceptJob(data, success, error)),\n        markCompleteJob: (data, success, error) => dispatch(Actions.markCompleteJob(data, success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotifCard)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { TextField, Button } from '@material-ui/core';\nimport CreateJobCard from '../CreateJobCard';\nimport NotifCard from '../NotifCard';\n\nclass Notifications extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n       this._getNotifs()\n    }\n\n    _getNotifs = () => {\n        let data = {\n            employer_email: this.props.Reducer.userInfo.email\n        }\n\n        this.setState({ loading: true })\n        this.props.getAllNotifs(data,success => {\n            // console.log(success)\n            if(success.status == 'success')\n            this.setState({ loading: false, allJobs: success.message })\n            else\n            this.setState({loading: false})\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category,\n                status: job.status,\n                job_id: job.job_id,\n                email: job.email,\n                freelancer_email: job.freelancer_email,\n                message: job.message,\n                notif_id: job.notif_id\n            }\n\n            return <NotifCard jobDetails={_jobDetails} _reloadJobs={this._getNotifs}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n \n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n                <Row >\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        {\n                            this.state.allJobs.length > 0\n                                ? this._renderAlljobs()\n                                : <p style={{ textAlign: 'center' }}>No notifications</p>\n                        }\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllNotifs: (data,success, error) => dispatch(Actions.getAllNotifs(data,success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Profile from '../Profile';\nimport Jobs from '../Jobs';\nimport MyJobs from '../MyJobs';\nimport Notifications from '../Notifications';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            show: false\n        }\n    }\n\n    handleClick = state => () => {\n        this.setState({ open: true, ...state });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    _renderContent = () => {\n\n        if (this.props.name == 'Profile')\n            return <Profile />\n\n        if (this.props.name == 'View & Create Jobs')\n            return <Jobs show={this.state.show} toggleShow={this._onToggle} />\n\n        if (this.props.name == 'My Jobs')\n            return <MyJobs />\n\n        if (this.props.name == 'Notifications')\n            return <Notifications />\n    }\n\n    _onToggle = () => {\n        this.setState({ show: !this.state.show })\n    }\n\n    _renderJobButton = () => {\n        if (this.props.Reducer.userInfo.account_type == 'Employer'\n            && this.props.name == 'View & Create Jobs') {\n            return <Button variant=\"contained\" color=\"primary\" onClick={this._onToggle}\n                style={{ height: '10%', marginLeft: '15px', marginTop: '10px' }} >\n                {this.state.show ? 'View Jobs' : 'Create Job'}\n            </Button>\n        }\n\n    }\n\n    render() {\n        return (\n            <main style={{ paddingTop: '20px' }}  >\n                <div style={{\n                    display: 'flex', flexDirection: 'row',\n                    alignItems: 'baseline', justifyContent: 'space-between', marginTop: '20px'\n                }} >\n                    <div style={{ display: 'flex', alignItems: 'baseline', marginLeft: '10px', flexDirection: 'row' }}>\n                        <h3 style={{ color: \"black\", fontWeight: 300 }}><strong>Home Page / </strong></h3>\n                        <h6 style={{ color: \"black\", fontWeight: 400 }}>{this.props.name}</h6>\n                    </div>\n                    {\n                        this._renderJobButton()\n                    }\n\n                </div>\n\n                {\n                    this._renderContent()\n                }\n\n            </main>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\n\n\nexport default connect(mapStateToProps, null)(Form)\n","import React from 'react';\nimport { List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport HomeIcon from '@material-ui/icons/HomeOutlined';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Profile from '@material-ui/icons/AccountCircleOutlined';\nimport Help from '@material-ui/icons/HelpOutline';\nimport AboutUs from '@material-ui/icons/InfoOutlined';\nimport WorkOutline from '@material-ui/icons/WorkOutline';\nimport MyJobs from '@material-ui/icons/Description';\nimport Notifications from '@material-ui/icons/NotificationsNone';\n\n\n\nimport { connect } from 'react-redux'\n\n\nclass ListElements extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <List style={{ paddingTop: '0px', paddingBottom: '0px' }}>\n                <ListItem button style={{ marginLeft: '-10' }} onClick={() => this.props.handleClick()}>\n                    <ListItemIcon>\n                        <HomeIcon style={{ color: 'white' }} />\n                    </ListItemIcon>\n                    <ListItemText primary={'Home Page'} style={{ color: 'white', fontSize: 8 }} />\n                    {this.props.homeOPEN ? <ExpandLess style={{ color: 'white' }} /> : <ExpandMore style={{ color: 'white' }} />}\n                </ListItem>\n                {\n                    <Collapse in={this.props.homeOPEN} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <Divider />\n                            {\n                                this.props.Reducer.userInfo.account_type == 'Freelancer'\n                                    ? ['Profile', 'View & Create Jobs', 'My Jobs', 'About Us', 'Help']\n                                        .map((text, index) => (\n                                            <ListItem button key={text}\n                                                className={this.props.nested} onClick={() => this.props.clickFunction(text)}>\n                                                <ListItemIcon style={{ color: 'white' }}>\n                                                    {\n                                                            (index === 0) ? <Profile />\n                                                            : (index === 1) ? <WorkOutline />\n                                                            : (index === 2) ? <MyJobs />\n                                                            : (index === 3) ? <AboutUs />\n                                                            : (index === 4) ? <Help />\n                                                            : null\n                                }\n                                        </ListItemIcon>\n                                                <ListItemText primary={text} style={{ color: 'white', fontSize: 8 }} />\n                                            </ListItem>\n                                        ))\n\n                                    : ['Profile', 'View & Create Jobs', 'Notifications' ,'About Us', 'Help']\n                                        .map((text, index) => (\n                                            <ListItem button key={text}\n                                                className={this.props.nested} onClick={() => this.props.clickFunction(text)}>\n                                                <ListItemIcon style={{ color: 'white' }}>\n                                                    {\n                                                        (index === 0) ? <Profile />\n                                                            : (index === 1) ? <WorkOutline />\n                                                                : (index === 2) ? <Notifications />\n                                                                    : (index === 3) ? <AboutUs />\n                                                                        : (index === 4) ? <Help />\n                                                                            : null\n                                                    }\n                                                </ListItemIcon>\n                                                <ListItemText primary={text} style={{ color: 'white', fontSize: 8 }} />\n                                            </ListItem>\n                                        ))\n                            }\n                            <Divider />\n                        </List>\n                    </Collapse>\n                }\n            </List>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\n\n\nexport default connect(mapStateToProps, null)(ListElements)\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      background:'white',\n      height:'100vh'\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n        \n      },\n    },\n    appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n       \n      },\n      \n    },\n    menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      background: 'linear-gradient( #50c878,#5FB5A7 )',\n     \n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      display:'block',\n      justifyContent:'flex-start',\n      background:'white',\n    },\n    nested: {\n      paddingLeft: theme.spacing.unit * 4,\n    },\n  });\n  \n\nconst AppbarTop = (props) =>\n{\n\n const   {classes} = props;\n\n    return (\n    \n    <AppBar position=\"fixed\" className={classes.appBar} style={{\n      \n      backgroundColor:'#242830'\n      \n      }}>\n      \n    <Toolbar style={{justifyContent:'center',\n      alignItems:'center',display:'flex', flexDirection:'row'}} >\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={props.onClickEvent}\n        className={classes.menuButton}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" noWrap  >\n       Dwork\n         \n      </Typography>\n    \n    </Toolbar>\n\n   \n  </AppBar>);\n}\n\n// export default AppbarTop;\n\nAppbarTop.propTypes = {\n  \n    classes: PropTypes.object.isRequired,\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles, { withTheme: true })(AppbarTop);","import React from 'react';\nimport { css } from '@emotion/core';\n// First way to import\nimport { ScaleLoader } from 'react-spinners';\n\n \nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div className='sweet-loading'>\n        <ScaleLoader\n          css={override}\n          sizeUnit={\"px\"}\n          size={50}\n          color={'#54abe5'}\n          loading={this.state.loading}\n        />\n      </div> \n    )\n  }\n}\nexport default AwesomeComponent;","import React from 'react';\nimport Spinner from '../Spinner';\nimport { withRouter } from 'react-router'\n\nconst HomePage = (props) => {\n  return (\n    <main  style={{paddingTop:'20px'}}> \n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end',marginTop:'50px' }}>\n      <p onClick={()=>props._enableMetaMask()}\n          style={{ color: 'black', textDecoration: 'underline', cursor: 'pointer', marginRight:'20px',fontWeight: 200 }}>\n            <strong>Enable Metamask</strong></p>\n\n        <p onClick={()=>props._onSignOut()}\n          style={{ color: 'black', textDecoration: 'underline', cursor: 'pointer', fontWeight: 200 }}>\n            <strong>Sign Out</strong></p>\n      </div>\n      <div style={{ textAlign: 'center' }} > \n        \n            <Spinner />\n            <h5 style={{ color: 'black', fontWeight: 200 }}>\n              <strong> Welcome To Dwork, {props.username} 😃</strong>\n              </h5>\n       \n      </div>\n    </main>\n  );\n}\n\n \nexport default withRouter(HomePage);","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    background:'#cccc',\n    height:'100vh'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n     \n    },\n    \n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor:'#242830'\n    \n   \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    display:'block',\n    justifyContent:'flex-start',\n    background:'#cccc',\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\n\nconst NavbarDrawer = (props) =>\n{\n    const {classes, theme} = props;\n    \n    return(\n        <nav className={classes.drawer} >\n        \n        <Hidden smUp implementation=\"css\">\n      \n          <Drawer\n            container={props.Container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={props.openState}\n            onClose={props.onCloseDrawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n         \n          >\n      \n            { props.renderDrawer() }\n          </Drawer>\n        </Hidden>\n        \n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n         \n            variant=\"permanent\"\n            open\n          >\n             {  props.renderDrawer() }\n         \n          </Drawer>\n        </Hidden>\n       \n      </nav>\n    );\n}\n\n// export default NavbarDrawer;\nNavbarDrawer.propTypes = {\n  \n    classes: PropTypes.object.isRequired,\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles, { withTheme: true })(NavbarDrawer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport Form from '../Form';\nimport ListElements from '../ListElements';\nimport AppbarTop from '../AppbarTop';\nimport HomePage from '../HomePage';\nimport NavbarDrawer from '../NavbarDrawer';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport ls from 'local-storage'\nimport Web3 from 'web3'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n \n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    background: 'white',\n    height: '100vh'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n\n    },\n\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    background: 'linear-gradient( #50c878,#5FB5A7 )',\n\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    display: 'block',\n    justifyContent: 'flex-start',\n    background: 'white',\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false,\n    name: '',\n    loaded: false,\n    homeOPEN: false,\n  };\n\n  componentWillMount() {\n\n    if (!this.props.Reducer.userInfo) {\n      this.props.history.push('/dwork/signin')\n    }\n  }\n\n_enableMetaMask = () => {\n  let web3;\n    let that = this\n\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(function (d) {\n          // User has allowed account access to DApp...\n          // console.log('meta mask succ ', d[0])\n         that.props.Update_Metamask(d[0])\n         ToastsStore.success('Meta mask authorized successfully')\n        })\n        .catch(err => {\n          ToastsStore.error('Meta mask authorization is required !')\n          // console.log('meta mask err 1 ', err)\n        })\n        \n      } catch (e) {\n        // User has denied account access to DApp...\n        ToastsStore.error('Meta mask authorization is required !')\n        // console.log('meta mask err ', e) \n      }\n    } \n    else {\n      alert('You have to install MetaMask !');\n    }\n}\n\n  handleClick = () => {\n    this.setState({ homeOPEN: !this.state.homeOPEN })\n    this.setState({ name: '' });\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n\n  onButtonClick = (name) => {\n    this.setState({ name: name });\n  }\n\n  _renderDrawerContents = () => {\n    const { classes } = this.props;\n\n    return <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List style={{ paddingTop: '0px', paddingBottom: '0px' }}>\n        <ListElements nested={classes.nested}\n          clickFunction={this.onButtonClick}\n          handleClick={this.handleClick}\n          homeOPEN={this.state.homeOPEN} />\n      </List>\n      <Divider />\n    </div>\n  }\n\n  _renderPageContent = () => {\n\n    const { classes } = this.props;\n\n    return <Form inputheight={classes.input} homeOPEN={this.state.homeOPEN}\n      name={this.state.name}\n      onsignout={this._onSignOut} />\n  }\n\n  _onSignOut = () => {\n    // ls.set('userInfo',null)\n    this.props.Clear()\n    this.props.history.push('/dwork/signin')\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n\n    return (<div className={classes.root}>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n \n      <CssBaseline />\n      <AppbarTop classes={this.props} onClickEvent={this.handleDrawerToggle} />\n      <NavbarDrawer classes={this.props} Container={this.props.container} openState={this.state.mobileOpen} onCloseDrawer={this.handleDrawerToggle}\n        renderDrawer={this._renderDrawerContents} />\n      {\n        this.state.name !== ''\n          ? this._renderPageContent()\n          :\n          <HomePage classes={this.props} username={this.props.Reducer.userInfo.username} \n          _onSignOut={this._onSignOut} _enableMetaMask={this._enableMetaMask} />\n      }\n      }\n\n    \n   </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Clear: () => dispatch(Actions.Clear()),\n    Update_Metamask: (accountNo) => dispatch(Actions.Update_Metamask(accountNo))\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer))\n","import React from 'react'\nimport './style.css'\nimport { Container, Row, Col } from 'react-grid-system';\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\n\n\nclass AuthCard extends React.Component {\n\n    state = {\n        toggle: true\n    }\n\n    _setToggle = () => {\n        this.setState({ toggle: !this.state.toggle })\n    }\n\n    _handleKeyDown = (e, field) => {\n        if (e.key === 'Enter') {\n            if (field == 'signin') {\n                this.props.onLogin()\n            }\n            if (field == 'signup') {\n                this.props.onSignup()\n            }\n        }\n    }\n\n    _renderSignUp = () => {\n        return <div className='window animated slideInDown' style={{ width: '550px', height: '600px' }} >\n            <div className='content'>\n                <div className='welcome'>Hello There!</div>\n                <div className='subtitle'>To get started, please sign-up on Dwork </div>\n                <div className='input-fields'>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                        <input type='text' placeholder='First name' className='input-line full-width'\n                            value={this.props.signup_details.firstName} onChange={(e) => this.props.onChangeSignup(e, 'firstName')} ></input>\n                        <input type='text' placeholder='Last name' className='input-line full-width'\n                            value={this.props.signup_details.lastName} onChange={(e) => this.props.onChangeSignup(e, 'lastName')} ></input>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n                        <input type='email' placeholder='Email' className='input-line full-width'\n                            value={this.props.signup_details.email} onChange={(e) => this.props.onChangeSignup(e, 'email')} ></input>\n                        <input type='text' placeholder='Username' className='input-line full-width'\n                            value={this.props.signup_details.userName} onChange={(e) => this.props.onChangeSignup(e, 'userName')}></input>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n                        <input type='password' placeholder='Password' className='input-line full-width'\n                            value={this.props.signup_details.password} onChange={(e) => this.props.onChangeSignup(e, 'password')} ></input>\n                        <input type='password' placeholder='Confirm Password' className='input-line full-width'\n                            value={this.props.signup_details.confirmPassword} onChange={(e) => this.props.onChangeSignup(e, 'confirmPassword')}></input>\n                    </div>\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\",marginTop: '5px',\n                    marginBottom: '5px' , paddingLeft: '25px', justifyContent: \"center\" }}>\n                        <Dropdown options={this.props.accountlist} value={this.props.signup_details.accountType}\n                            onChange={(option) => this.props._onSelect(option, 'signup')} placeholder=\"Select account type\" />\n                    </div>\n\n                </div>\n\n                <button className='ghost-round full-width' onClick={() => this.props.onSignup()}>Sign up</button>\n                <div className='subtitle'>Already a member?</div>\n                <button className='ghost-round full-width' onClick={() => this._setToggle()}>Sign in</button>\n            </div>\n        </div>\n    }\n\n    _renderSignIn = () => {\n        return <div className='window animated fadeInDown' style={{ height: '500px', width: '360px' }}>\n            <div className='content' >\n                <div className='welcome'>Hello There!</div>\n                <div className='subtitle'>Welcome back on Dwork </div>\n                <div className='input-fields'style={{ paddingRight: '25px' }} >\n                    <input type='email' placeholder='Email' className='input-line full-width' \n                        value={this.props.login_details.email} onChange={(e) => this.props.onChangeLogin(e, 'email')} ></input>\n                    <input type='password' placeholder='Password' className='input-line full-width'\n                        value={this.props.login_details.password} onChange={(e) => this.props.onChangeLogin(e, 'password')}\n                        onKeyDown={(e) => this._handleKeyDown(e, 'signin')}\n                    ></input>\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\",\n                        marginTop: '5px',marginBottom: '5px' , paddingLeft: '25px' }}>\n                        <Dropdown options={this.props.accountlist} value={this.props.login_details.accountType}\n                            onChange={(option) => this.props._onSelect(option, 'signin')} placeholder=\"Select account type\" />\n                    </div>\n                </div>\n                <button className='ghost-round full-width' onClick={() => this.props.onLogin()}>Sign in</button>\n                <div className='subtitle'>Don't have an account?</div>\n                <button className='ghost-round full-width' onClick={() => this._setToggle()} >Create Account</button>\n            </div>\n        </div>\n    }\n\n    render() {\n        return (\n            <Container fluid style={{ height: '100%' }} >\n                <Row style={{ height: '100%', backgroundColor: '#1d2026' }} fluid>\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        <div className='container1'>\n\n                            {\n                                this.state.toggle\n                                    ? this._renderSignIn()\n                                    : this._renderSignUp()\n                            }\n\n                        </div>\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n            </Container>\n        );\n    }\n\n}\n\nexport default AuthCard","import React from 'react';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AuthCard from '../AuthCard'\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport ls from 'local-storage'\n\nclass SigninForm extends React.Component {\n\n  constructor() {\n\n    super()\n    this.state = {\n      flag: false,\n      accountlist: ['Freelancer', 'Employer'],\n\n      login_details: {\n        email: '',\n        password: '',\n        accountType: ''\n      },\n\n      signup_details: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        userName: '',\n        password: '',\n        confirmPassword: '',\n        accountType: ''\n\n\n      }\n    }\n\n    this.testEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  }\n\n  onChangeLogin = (event, field) => {\n    let text = ''\n\n    if (field == 'accountType')\n      text = event\n    else\n      text = event.target.value\n\n    this.setState(prevState => ({\n      login_details: {\n        ...prevState.login_details,\n        [field]: text\n      }\n    }))\n  }\n\n  onChangeSignup = (event, field) => {\n\n    let text = ''\n\n    if (field == 'accountType')\n      text = event\n    else\n      text = event.target.value\n\n    this.setState(prevState => ({\n      signup_details: {\n        ...prevState.signup_details,\n        [field]: text\n      }\n    }))\n  }\n\n  onLogin = () => {\n\n\n    if (this.state.login_details.email.trim() == '')\n      return ToastsStore.error(\"Please fill out email field\")\n\n\n    if (!this.testEmail.test(this.state.login_details.email))\n      return ToastsStore.error('Please enter a valid email address')\n\n    if (this.state.login_details.password.trim() == '')\n      return ToastsStore.error('Please fill out password field')\n\n    if (this.state.login_details.password.length < 8)\n      return ToastsStore.error('Password length should be 8 or greater')\n\n    if (this.state.login_details.accountType.trim() == '')\n      return ToastsStore.error('Please select an account type')\n\n\n      let loginData = { \n        email: this.state.login_details.email, \n        account_type: this.state.login_details.accountType,\n        password: this.state.login_details.password,\n  \n      }\n  \n  \n      this.props.Login(loginData, success => {\n  \n  \n        if (success.status == 'success') {\n          ToastsStore.success(success.message)\n          ls.set('userInfo',success.userdata)\n          setTimeout(() => this.props.history.push('/dwork/Home'), 1300)\n        }\n        else {\n          ToastsStore.error(success.message)\n          setTimeout(() => this.props.history.push('/dwork/signin'), 1300)\n        }\n  \n  \n  \n      }, error => {\n  \n        ToastsStore.error(error.message)\n  \n      })\n  }\n\n  onSignup = () => {\n\n    if (this.state.signup_details.firstName.trim() == '')\n      return ToastsStore.error('Please fill out first name field')\n\n    if (this.state.signup_details.lastName.trim() == '')\n      return ToastsStore.error('Please fill out last name field')\n\n    if (this.state.signup_details.email.trim() == '')\n      return ToastsStore.error('Please fill out email field')\n\n    if (!this.testEmail.test(this.state.signup_details.email))\n      return ToastsStore.error('Please enter a valid email address')\n\n    if (this.state.signup_details.userName.trim() == '')\n      return ToastsStore.error('Please fill out username field')\n\n    if (this.state.signup_details.password.trim() == '')\n      return ToastsStore.error('Please fill out password field')\n\n    if (this.state.signup_details.password.length < 8)\n      return ToastsStore.error('Password length should be 8 or greater')\n\n    if (this.state.signup_details.confirmPassword.trim() == '')\n      return ToastsStore.error('Please fill out confirm password field')\n\n    if (this.state.signup_details.confirmPassword != this.state.signup_details.password)\n      return ToastsStore.error('Passwords do not match')\n\n    if (this.state.signup_details.accountType.trim() == '')\n      return ToastsStore.error('Please select an account type')\n\n    let signupData = {\n      first_name: this.state.signup_details.firstName,\n      last_name: this.state.signup_details.lastName,\n      email: this.state.signup_details.email,\n      username: this.state.signup_details.userName,\n      password: this.state.signup_details.password,\n      account_type: this.state.signup_details.accountType,\n      accountNo: ''\n\n    }\n\n\n    this.props.Signup(signupData, success => {\n\n\n      if (success.status == 'success') {\n        ToastsStore.success(success.message)\n        setTimeout(() => this.props.history.push('/dwork/signin'), 1300)\n      }\n      else {\n        ToastsStore.error(success.message)\n        setTimeout(() => this.props.history.push('/dwork/signin'), 1300)\n      }\n\n\n\n    }, error => {\n\n      ToastsStore.error(error.message)\n\n    })\n\n\n  }\n\n  _onSelect = (option, field) => {\n\n    if( field == 'signup')\n     this.onChangeSignup(option.label, 'accountType')\n    else\n    this.onChangeLogin(option.label, 'accountType')\n\n  }\n\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}><AuthCard\n        onLogin={this.onLogin} login_details={this.state.login_details}\n        signup_details={this.state.signup_details} onSignup={this.onSignup} accountlist={this.state.accountlist}\n        onChangeLogin={this.onChangeLogin} onChangeSignup={this.onChangeSignup} _onSelect={this._onSelect}\n      />\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Signup: (data, success, error) => dispatch(Actions.Signup(data, success, error)),\n    Login: (data, success, error) => dispatch(Actions.Login(data, success, error)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SigninForm);","import React from 'react';\nimport { ToastsStore } from 'react-toasts';\nimport ResponsiveDrawer from '../ResponsiveDrawer'\nimport SigninForm from '../SigninForm';\nimport Routing from '../../App';\nimport { Route, Link, BrowserRouter as Router ,Switch} from 'react-router-dom'\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      success: false,\n      failed: false,\n    };\n  }\n\n  onsignout = () => {\n    this.setState({ success: false });\n    this.setState({ email: '', password: '' });\n  }\n\n  buttonsubmit = () => {\n    if ('admin' === this.state.email && '123' === this.state.password) {\n\n      this.setState({ success: true });\n    }\n    else {\n      ToastsStore.error(\"UserName or Password doesn't match !\");\n      this.setState({ failed: true });\n    }\n  }\n\n  onEmail = (event) => {\n    this.setState({ email: event.target.value });\n  }\n\n  onPassword = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    return (\n      <div style={{\n        background: \"#242830\",\n        height: '100vh'\n      }}>\n\n\n{this.props.children}\n\n        {/* {\n          (this.state.success === false)\n            ?\n            <SigninForm classes={this.props} onEmailChange={this.onEmail} onPasswordChange={this.onPassword} onSubmit={this.buttonsubmit} state={this.state.failed} />\n            : \n            <ResponsiveDrawer onsignout={this.onsignout} success={this.state.success} />\n        } */}\n      </div>\n    );\n  }\n}\n\nexport default SignIn;","import React from 'react';\nimport './App.css';\nimport './Animate.css'\nimport Landingpage from './Components/LandingPage';\nimport { connect } from 'react-redux';\nimport { Route, Link, HashRouter as Router, Switch } from 'react-router-dom'\nimport Dashboard from './Components/Dashboard';\nimport SigninForm from './Components/SigninForm';\nimport ResponsiveDrawer from './Components/ResponsiveDrawer';\nimport LoadingOverlay from 'react-loading-overlay';\n\n\n\n\nconst Routing = (props) => { \n\n  return (<Router basename=\"/\" >\n    <Switch>\n    \n      <Route exact path=\"/\" component={Landingpage} />\n      <Route exact path=\"/dwork\" component={Landingpage} />\n      <LoadingOverlay\n      active={props.Reducer.loading}\n      spinner\n      text='Loading ...'\n      >\n      <Dashboard>\n        <Route component={({ match }) => {\n          return <div style={{height:'100%',width:'100%'}}>\n            <Route exact path=\"/dwork/signin\" component={SigninForm} />\n            <Route exact path=\"/dwork/home\" component={ResponsiveDrawer}\n            // render={(props) => <ResponsiveDrawer {...props} isAuthed={true} />}\n            />\n\n          </div>\n        }} />\n\n      </Dashboard>\n      </LoadingOverlay>\n    </Switch>\n  </Router>);\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\n\nexport default connect(mapStateToProps, null)(Routing);\n ","const INITIAL_STATE = {\n    loading: false,\n    userInfo: null,\n    metamask_acc: ''\n}\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n\n    switch (action.type) {\n\n        case 'START_LOADING': {\n            return { ...state, loading: true }\n        }\n\n        case 'STOP_LOADING': {\n            return { ...state, loading: false }\n        }\n\n        case 'USER_INFO': {\n            return { ...state, userInfo: action.payload, loading: false }\n        }\n\n        case 'UPDATE_USER_INFO': {\n            return { ...state, userInfo: action.payload }\n        }\n\n        case 'UPDATE_META_MASK': {\n            return { ...state, metamask_acc: action.payload }\n        }\n\n        case 'CLEAR': {\n            return { ...state, userInfo: null, loading: false, metamask_acc: '' }\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { reducer } from \"./reducer\";\n\nexport default combineReducers({\n    Reducer: reducer\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './Redux/Reducers'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' \nimport { PersistGate } from 'redux-persist/integration/react'\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\n  const persistedReducer = persistReducer(persistConfig, reducer)\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n        <App />\n        </PersistGate>\n    </Provider>\n\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}